name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: 'v3.7.0'  

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.0'

    - name: Configure Kubernetes credentials
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
        chmod 600 ~/.kube/config  # Set correct permissions

    - name: Verify Kubernetes configuration
      run: |
        kubectl config view
        kubectl cluster-info

    - name: Set Kubernetes context
      run: |
        kubectl config use-context ${{ secrets.KUBE_CONTEXT }}

    - name: Check Helm chart directory
      run: |
        if [ ! -d "./cosmocloud-deploy" ]; then
          echo "Helm chart directory ./cosmocloud-deploy does not exist."
          exit 1
        fi

    - name: Check Helm chart files
      run: |
        if [ ! -f "./cosmocloud-deploy/Chart.yaml" ]; then
          echo "Chart.yaml file is missing in ./cosmocloud-deploy."
          exit 1
        fi
        if [ ! -f "./cosmocloud-deploy/values.yaml" ]; then
          echo "values.yaml file is missing in ./cosmocloud-deploy."
          exit 1
        fi
        if [ ! -d "./cosmocloud-deploy/templates" ]; then
          echo "templates directory is missing in ./cosmocloud-deploy."
          exit 1
        fi

    - name: Validate Helm chart
      run: |
        helm lint ./cosmocloud-deploy

    - name: Install Helm chart
      run: |
        helm install ${{ secrets.HELM_RELEASE_NAME }} ./cosmocloud-deploy --atomic --timeout 30s

    - name: Test deployment
      run: |
        kubectl get pods -n ${{ secrets.HELM_RELEASE_NAME }}-namespace
        kubectl get services -n ${{ secrets.HELM_RELEASE_NAME }}-namespace

    - name: Uninstall Helm chart
      if: always()
      run: |
        helm uninstall ${{ secrets.HELM_RELEASE_NAME }} --namespace ${{ secrets.HELM_RELEASE_NAME }}-namespace
